services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: fintrack
      POSTGRES_PASSWORD: fintrack
      POSTGRES_DB: fintrack
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fintrack"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://fintrack:fintrack@postgres:5432/fintrack
      JWT_SECRET: your-secret-key
      PORT: 3333
      NODE_ENV: development
      PRISMA_ENGINE_TYPE: binary
    ports:
      - "3333:3333"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3333
      API_URL: http://backend:3333
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data: 