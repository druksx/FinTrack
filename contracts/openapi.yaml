openapi: 3.1.0
info:
  title: FinTrack API
  version: 1.0.0
  description: Personal expense tracker API

servers:
  - url: http://localhost:3333
    description: Local development server

paths:
  /expenses:
    post:
      summary: Create a new expense
      operationId: createExpense
      tags: [Expenses]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateExpenseDto"
      responses:
        201:
          description: Expense created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseDto"
        400:
          $ref: "#/components/responses/BadRequest"
    get:
      summary: List expenses for a specific month
      operationId: listExpenses
      tags: [Expenses]
      parameters:
        - name: month
          in: query
          required: true
          schema:
            type: string
            pattern: '^\d{4}-\d{2}$'
            example: "2024-03"
          description: Month in YYYY-MM format
      responses:
        200:
          description: List of expenses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExpenseDto"
        400:
          $ref: "#/components/responses/BadRequest"

  /categories:
    get:
      summary: List all expense categories
      operationId: listCategories
      tags: [Categories]
      responses:
        200:
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CategoryDto"
    post:
      summary: Create a new category
      operationId: createCategory
      tags: [Categories]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCategoryDto"
      responses:
        201:
          description: Category created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryDto"
        400:
          $ref: "#/components/responses/BadRequest"

components:
  schemas:
    CreateExpenseDto:
      type: object
      required:
        - amount
        - date
        - categoryId
      properties:
        amount:
          type: number
          format: decimal
          minimum: 0.01
          example: 42.50
          description: Expense amount in the default currency
        date:
          type: string
          format: date
          example: "2024-03-15"
        categoryId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        note:
          type: string
          maxLength: 500
          example: "Weekly groceries"

    ExpenseDto:
      type: object
      required:
        - id
        - amount
        - date
        - categoryId
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        amount:
          type: number
          format: decimal
        date:
          type: string
          format: date
        categoryId:
          type: string
          format: uuid
        note:
          type: string
        category:
          $ref: "#/components/schemas/CategoryDto"
        createdAt:
          type: string
          format: date-time

    CreateCategoryDto:
      type: object
      required:
        - name
        - color
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
          example: "Groceries"
        color:
          type: string
          pattern: "^#[0-9A-Fa-f]{6}$"
          example: "#65CE55"
          description: Hex color code

    CategoryDto:
      type: object
      required:
        - id
        - name
        - color
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        color:
          type: string
          pattern: "^#[0-9A-Fa-f]{6}$"

  responses:
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object
            required:
              - message
              - statusCode
            properties:
              message:
                type: array
                items:
                  type: string
              statusCode:
                type: integer
                example: 400
